use super::list_id::ListId;
use crate::{
    core::posix::Posix, media::interaction::interaction_name::InteractionName,
    user::user_id::UserId,
};

#[derive(Debug, Clone, PartialEq, Eq, Hash, Default)]
pub struct List {
    pub id: ListId,
    pub created_at_posix: Posix,
    pub updated_at_posix: Posix,
    pub deleted_at_posix: Option<Posix>,
    pub name: String,
    pub description: String,
    pub creator_user_id: UserId,
    pub variant: ListVariant,
}

#[derive(Debug, Clone, PartialEq, Eq, Hash, Default)]
pub enum ListVariant {
    #[default]
    UserCreated,
    AutoGenerated(InteractionName),
}

impl InteractionName {
    pub fn to_list_description(&self) -> &str {
        match self {
            InteractionName::Liked => "",
            InteractionName::Disliked => "",
            InteractionName::Seen => "",
            InteractionName::NotSeen => "",
            InteractionName::Interested => "",
            InteractionName::NotInterested => "",
        }
    }

    pub fn to_list_id(&self, user_id: UserId) -> ListId {
        ListId::new(&format!("{}-{}", user_id.as_str(), self.to_name()))
    }
}
